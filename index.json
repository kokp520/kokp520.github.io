[{"categories":["Documents"],"content":"教學要怎麼建立自己的hugo靜態網站 + github.io ","date":"2023-08-26","objectID":"/adi-website/:0:0","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"如何建立hugo個人靜態網站 ","date":"2023-08-26","objectID":"/adi-website/:1:0","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"Hugo installation 由於我個人是屬於Mac使用者，所以就跟window使用者說抱歉了～ 😲 brew install hugo 檢查 執行hugo --version，如果有出現版本，代表成功安裝。 ","date":"2023-08-26","objectID":"/adi-website/:1:1","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"Create local file hugo new site myWebsite 你會看到資料夾內多了myWebsite的檔案 / ├── archetypes ├── assets ├── content ├── data ├── layouts ├── resources ├── static ├── public ├── themes ├── hugo.html ☝️ 架構與作用會類似長得像這樣 ☝️ 每個資料夾大致作用 archetypes - 默認的文件，Hugo會根據這裡的模型來生成內容 assets - hugo 資源文件，像是scss/sass,typescript等，hugo會將他們編譯成靜態資源 content - 網站的內容頁面，也就是你的文章。 data - 網站會需要的數據，像是json,yaml,toml layouts - hugo模板文件，決定內容如何編譯成html，像是你的首頁 resoutces - hugo處理後的資源文件 static - 靜態文件圖片，會直接複製到public public - hugo生成的整個網站輸出目錄。 github.io就要存放在這裡 theme - 主題 hugo.html - website設定檔 簡單來說，hugo根據content and data 生成頁面，layout控制渲染，assets and resources處理資源，public輸出文件目錄。 ","date":"2023-08-26","objectID":"/adi-website/:1:2","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"Theme hugo本身有建立許多主題的分享 我個人是會把主題的作者附在個人的網站上，尊重每個創作者！ 可以從這裡下載 - hugo theme hugo theme 點擊喜歡的主題後你會看到有Download 大部分的主題也都會有Demo，挑自己喜歡的就可以了。 demo 點擊demo的超連結就可以了 Note 通常每個主題內部都會在教學如何安裝，可能會有些許不同。 如果有遇到問題可以到該主題的github觀看！ 關於git的指令我之後再寫一篇文章講解 在你下載的主題之中會有exampleSite，把他複製下來貼到有go.mod那一頁。 go.mod 或是你可以直接把你需要的exampleSite/content, static等出來讓模板渲染他，這些都只是範例但你可以依照自己想法去慢慢編輯。 * (畢竟刪除比加法簡單) ","date":"2023-08-26","objectID":"/adi-website/:1:3","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"開啟local server 接下來你可以在有go.mod那一頁執行 hugo server hugo server 這邊的localhost:54104 可以直接按者Ctrl+左鍵點擊他 就可以看到妳美美的網站了! 再去你的設定檔以及content/posts內部慢慢上傳貼文了～ ","date":"2023-08-26","objectID":"/adi-website/:1:4","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"發佈到github 首先我個人會在github建立兩個repo，一個存放靜態網頁，一個存放自己的文件內容。 先假設你是在~/中執行， # 創立兩個資料夾 mkdir myWebsite # 這邊會存放有著go.mod的內容 也就是上方做的資料 mkdir public # 這邊把靜態檔案跟主檔案切開 Step 1 - 在github上建立兩個repo，一個叫做myWebsite(這邊沒有特別指定名稱)，第二個必須要叫做github帳號.github.io，github Page才會讀取你的靜態網頁。 Step 2 - 在有go.mod的專案底下 cd ~/myWebsite git init git remote add origin https://github.com/帳號/網站專案名稱 git add . git commit -m 'create project' git push origin main Step 3 - 在public，執行 cd ~/public git init git remote add origin https://github.com/帳號/帳號.github.io git add . git commit -m 'create github page' git push origin main Step 4 - 再回到有go.mod的頁面 建立一個捷徑到你的myWebsite #複製你的public絕對路徑 以我的mac舉例 ln -s /home/user/public /home/user/myWebsite Step 5 - 回到myWebsite後執行hugo cd ~/myWebsite; hugo; # 這時會建立靜態檔案到public裡 #回到public push 到github就完成了 cd ~/public git add . git ci -m 'add static website' git push origin main 恭喜你完成部署自己的網站！ 再來就到https://帳號.github.io就可以看到你的個人網站了 Tip 部署會需要一些時間，想知道CI/CD發生什麼事，可以到github.io的repo點擊action就可以看到 action.png ","date":"2023-08-26","objectID":"/adi-website/:1:5","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"建立貼文 有人問我說要怎麼創建貼文，只要到你的myWebsite/content/posts/創建postName/index.md ","date":"2023-08-26","objectID":"/adi-website/:1:6","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"hackMD md是什麼？ 這已經不是本文章的內容了在這邊分享一些連結😆 Markdown語法大全 hackmd hackmd練習 👆可以在這邊創建帳號，就可以直接寫markdown且執行展示給你看！ ","date":"2023-08-26","objectID":"/adi-website/:1:7","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"CI/CD Script tool 另外分享個執行部屬的腳本 package main import ( \"fmt\" \"os\" \"os/exec\" \"path/filepath\" ) func main() { // 設定 Hugo 專案目錄的路徑 hugoProjectPath := \"你的public的絕對路徑\" hugoPath := \"有go.mod的那個repo路徑\" // 執行 Hugo 命令 if err := executeCommand(hugoPath, \"hugo\"); err != nil { fmt.Println(\"Hugo 執行失敗:\", err) return } // 執行 Git 命令 if err := executeCommands(hugoProjectPath, \"git\", \"add\", \".\"); err != nil { fmt.Println(\"Git add 失敗:\", err) return } if err := executeCommands(hugoProjectPath, \"git\", \"commit\", \"-m\", \"update\"); err != nil { fmt.Println(\"Git commit 失敗:\", err) return } if err := executeCommands(hugoProjectPath, \"git\", \"push\"); err != nil { fmt.Println(\"Git push 失敗:\", err) return } fmt.Println(\"完成！\") } func executeCommand(dir, command string, args ...string) error { cmd := exec.Command(command, args...) cmd.Dir = dir cmd.Stdout = os.Stdout cmd.Stderr = os.Stderr return cmd.Run() } func executeCommands(dir, command string, args ...string) error { cmd := exec.Command(command, args...) cmd.Dir = dir cmd.Stdout = os.Stdout cmd.Stderr = os.Stderr return cmd.Run() } func getAbsolutePath(relativePath string) (string, error) { absPath, err := filepath.Abs(relativePath) if err != nil { return \"\", err } return absPath, nil } 執行方法 # 我個人是放在有go.mod的那個目錄創建bin資料夾，把上面的code放在裡面 go run bin/cicd_script.go 就可以瞜！ ","date":"2023-08-26","objectID":"/adi-website/:1:8","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["Documents"],"content":"調整網頁細項 todo comming soon… ","date":"2023-08-26","objectID":"/adi-website/:2:0","tags":[],"title":"如何建立個人靜態網站 - Hugo","uri":"/adi-website/"},{"categories":["project"],"content":"使用Nodejs+express開發購物網站","date":"2023-08-26","objectID":"/oldroad-website/","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"OldroadWebsite | SHOP | Nodejs | Express | MongoDB 使用Nodejs+express開發購物網站，包含登入系統、後台系統、購物車系統。 Old-Road Shop ","date":"2023-08-26","objectID":"/oldroad-website/:0:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Introduction This project was completed before i enter the software industry. At that time, I created a website as a side bussiness venture for selling like old school clothes, cause many of my friends in the unversity dance club are enthusiasts of vintage culture. However, it is no longer in use at the moment. Because A free acount of AWS EC2 and RDS is limited to a one year. LOL… ","date":"2023-08-26","objectID":"/oldroad-website/:1:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Demo Show simple function about this website. ","date":"2023-08-26","objectID":"/oldroad-website/:2:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Backend Function quick look A few infomations to help you get a good looking for the project: Login System - Allows users to log in and store data, saving persional informationand shopping cart contents. Shopping Cart - Enables users to create a wishlist. enhancing the overall shopping experience by allowing one-click ordering. Session Management - Facilitates seamless user interactions and data retention during their visit. Notidication - sends out notifications email to verify membership. ","date":"2023-08-26","objectID":"/oldroad-website/:3:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Frontend Adjust ","date":"2023-08-26","objectID":"/oldroad-website/:4:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"youtube I learned the usage of CSS and JavaScript on YouTube for the frontend, and then customized them into styles I personally prefer. ","date":"2023-08-26","objectID":"/oldroad-website/:4:1","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"stack overflow Fix the problem with guidance and expertise shared by the supportive Stack Overflow community. ","date":"2023-08-26","objectID":"/oldroad-website/:4:2","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"However However, I adjusted this part according to the actual circumstances. ","date":"2023-08-26","objectID":"/oldroad-website/:4:3","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Learning ","date":"2023-08-26","objectID":"/oldroad-website/:5:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Node.js, Express, and MongoDB First of all, This project was not just about building a website, it was a testament to the potency of my acquired skills and the limitless potential of continuous learning. As I dived into the intricacies of Node.js, I was captivated by its event-driven architecture. Express, serving as the backbone, streamlined the development process and allowed me to focus on crafting remarkable features. MongoDB, a NoSQL database, brought agility to data management, enabling seamless interactions between the application and the ever-expanding inventory. ","date":"2023-08-26","objectID":"/oldroad-website/:5:1","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Brain storming - process The process was a fusion of self-guided learning and hands-on experience. I started to think what users require and how the bussiness models of those major brands were constructed. what kind of services are important to establish on the website. ","date":"2023-08-26","objectID":"/oldroad-website/:5:2","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Retrospect In retrospect, this achievement has force my foundation as a developer. My E-commerce creation not only showcases products but also embodies the culmination of hours spent learning. ","date":"2023-08-26","objectID":"/oldroad-website/:5:3","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Architecture of folder ./OldroadWebsite ├── config ├── controllers ├── hero ├── middleware ├── model ├── photo ├── router ├── views ","date":"2023-08-26","objectID":"/oldroad-website/:6:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Source code my github repo Guide if you want to try this website, enter the github repo, I write about the How to run. ","date":"2023-08-26","objectID":"/oldroad-website/:7:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Send sms notification by crawler tool with python. ","date":"2023-08-27","objectID":"/sms-python-gogoro/:0:0","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"前言 此專案是我在進入軟體工程前製作的小工具，當時我只有對於program只有基本的邏輯判斷寫法，經驗只有大學用arduino自動化設備，like: 熱感應燈、熱感應風扇。 人們經過時會自動亮燈或是溫度太高開啟風扇的自動化設備。 使專案是我在gogoro實習時已經上手且想實現更多價值，於是試著思考如果`創造實際收益`或是`減少成本耗損`，提高廠內運轉速度以及工位周轉率，開發自動化發送簡訊的輔助工具。 illustative diagram ","date":"2023-08-27","objectID":"/sms-python-gogoro/:1:0","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Project ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:0","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Profit 節省30-40萬/年 Info 已該店實際工程師營收時薪計算，以及工作經驗實際平均評估， 有公定的收費時薪計算方式，以此分析。 ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:1","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Environment python3.11.4 Selenium ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:2","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"How it works 依照輸入客戶電話也可以自動根據隔日預約名單，利用簡易爬蟲讀取第三方call api已達到發送簡訊內容。 內容有基本的模板，也可以由客戶端維修工程師或櫃檯服務人員自定義。 By inputting the customer’s phone number, the system can automatically retrieve the next day’s appointment list. It utilizes a simple web crawler to call third-party API, enabling the sending of SMS notifications. The messages follow a basic template but can also be customized by the client, maintenance engineers, or front desk personnel. ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:3","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Github source code source code link ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:4","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":null,"content":"Fun fact about me.","date":"2023-08-26","objectID":"/about/","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":" Abstract Welcome to my personal blog! Here i’ll be sharing insights about my experience as a software engineer. i like to keep things simple and relatable. if you have any questions or any job oppertunities related to engineering. please contact me, let’s have a chat. By Adi. ","date":"2023-08-26","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"about me ","date":"2023-08-26","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Introduction Hi, 我是Adi，我目前從事軟體工程師一年以上的時間，主要負責的工作是後端工程師，現在從事的項目是遊戲server維護以及開發新功能，善於團隊合作針對需求以及不同的產品設計不同的server service，陸陸續續將會更新到posts。 ","date":"2023-08-26","objectID":"/about/:1:1","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Blog 2023-8-27 開始決定經營blog，主要的原因是想要有個自己的網站可以紀錄個人的Change log，也記下自己在當工程師的每個階段里程碑，過一段時間確認自己的方向是否為自己希望的Envisioned Life，另一方面想增進自己統整以及寫blog能力，在吸收到新的知識後，透過寫blog釐清自己的觀念，以及紀錄實用面的觀念，在未來快速找到工具使用。 之前也有開發AI server處理ai事務，舉例：pre-commit-msg case…等，我意識到我的日常類似統整或是翻譯事項已經開始交給AI處理，為了培養統整以及優化自己本身的溝通能力，利用blog的方式持續進步。 ","date":"2023-08-26","objectID":"/about/:1:2","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Work with me 易維護且易擴充服務 產品上線後，為了產品的生命週期，會需要對產品做維護以及開發更多可用功能，在設計之初就要儘量滿足未來的各式考量，具有開發多個產品會需要針對不同接口的服務。 團隊合作 在發開產品的主要雛形透過團隊或是自身開發，在未來後續團隊接手的學習成本也是重要的一環，從溝通討論共識 到後期的文件處理，都可以有效減低新進人員的上手時間。 自動化流程 礙於產品開發時程，構思提高開發效率方法，已開發多個能夠提高團隊開發速度工具，以及自動化測試流程，整合測試工具，建構自動化提升團隊開發效率，不需要讓團隊浪費重複且繁瑣的工作，舉例 AI Server後期也處理改版文件的統整。 ","date":"2023-08-26","objectID":"/about/:1:3","tags":null,"title":"About","uri":"/about/"}]