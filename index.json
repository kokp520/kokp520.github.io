[{"categories":[],"content":"hello wrold hello world banner ","date":"2023-08-26","objectID":"/world/:0:0","tags":[],"title":"world","uri":"/world/"},{"categories":["project"],"content":"使用Nodejs+express開發購物網站","date":"2023-08-26","objectID":"/oldroad-website/","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"OldroadWebsite | SHOP | Nodejs | Express | MongoDB 使用Nodejs+express開發購物網站，包含登入系統、後台系統、購物車系統。 Old-Road Shop ","date":"2023-08-26","objectID":"/oldroad-website/:0:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Introduction This project was completed before i enter the software industry. At that time, I created a website as a side bussiness venture for selling like old school clothes, cause many of my friends in the unversity dance club are enthusiasts of vintage culture. However, it is no longer in use at the moment. Because A free acount of AWS EC2 and RDS is limited to a one year. LOL… ","date":"2023-08-26","objectID":"/oldroad-website/:1:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Demo Show simple function about this website. ","date":"2023-08-26","objectID":"/oldroad-website/:2:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Backend Function quick look A few infomations to help you get a good looking for the project: Login System - Allows users to log in and store data, saving persional informationand shopping cart contents. Shopping Cart - Enables users to create a wishlist. enhancing the overall shopping experience by allowing one-click ordering. Session Management - Facilitates seamless user interactions and data retention during their visit. Notidication - sends out notifications email to verify membership. ","date":"2023-08-26","objectID":"/oldroad-website/:3:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Frontend Adjust ","date":"2023-08-26","objectID":"/oldroad-website/:4:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"youtube I learned the usage of CSS and JavaScript on YouTube for the frontend, and then customized them into styles I personally prefer. ","date":"2023-08-26","objectID":"/oldroad-website/:4:1","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"stack overflow Fix the problem with guidance and expertise shared by the supportive Stack Overflow community. ","date":"2023-08-26","objectID":"/oldroad-website/:4:2","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"However However, I adjusted this part according to the actual circumstances. ","date":"2023-08-26","objectID":"/oldroad-website/:4:3","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Learning ","date":"2023-08-26","objectID":"/oldroad-website/:5:0","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Node.js, Express, and MongoDB First of all, This project was not just about building a website, it was a testament to the potency of my acquired skills and the limitless potential of continuous learning. As I dived into the intricacies of Node.js, I was captivated by its event-driven architecture. Express, serving as the backbone, streamlined the development process and allowed me to focus on crafting remarkable features. MongoDB, a NoSQL database, brought agility to data management, enabling seamless interactions between the application and the ever-expanding inventory. ","date":"2023-08-26","objectID":"/oldroad-website/:5:1","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Brain storming - process The process was a fusion of self-guided learning and hands-on experience. I started to think what users require and how the bussiness models of those major brands were constructed. what kind of services are important to establish on the website. ","date":"2023-08-26","objectID":"/oldroad-website/:5:2","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Retrospect In retrospect, this achievement has force my foundation as a developer. My E-commerce creation not only showcases products but also embodies the culmination of hours spent learning. ","date":"2023-08-26","objectID":"/oldroad-website/:5:3","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["project"],"content":"Source code my github repo Guide if you want to try this website, enter the github repo, I write about the How to run. ","date":"2023-08-26","objectID":"/oldroad-website/:5:4","tags":null,"title":"oldroad - 購物網站","uri":"/oldroad-website/"},{"categories":["documentation"],"content":"Find out how to create and organize your content quickly and intuitively in LoveIt theme.","date":"2020-03-05","objectID":"/theme-documentation-content/","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Find out how to create and organize your content quickly and intuitively in LoveIt theme. ","date":"2020-03-05","objectID":"/theme-documentation-content/:0:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"1 Contents Organization A few suggestions to help you get a good looking site quickly: Keep post pages in the content/posts directory, for example: content/posts/my-first-post.md Keep other pages in the content directory, for example: content/about.md Local resources organization Local Resource Reference There are three ways to reference local resources such as images and music: Using page resources in page bundles. You can reference page resources by the value for Resources.GetMatch or the filepath of the resource relative to the page directory directly. Store resources in the assets directory, which is /assets by default. The filepath of the resource to reference in the post is relative to the assets directory. Store resources in the static directory, which is /static by default. The filepath of the resource to reference in the post is relative to the static directory. The priority of references is also in the above order. There are many places in the theme where the above local resource references can be used, such as links, images, image shortcode, music shortcode and some params in the front matter. Images in page resources or assets directory processing will be supported in the future. It’s really cool! ","date":"2020-03-05","objectID":"/theme-documentation-content/:1:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"2 Front Matter Hugo allows you to add front matter in yaml, toml or json to your content files. Note Not all of the below front matters need to be set in each of your posts. It is necessary only if the front matters and the page part in your site configuration are inconsistent. Here is a front matter example: --- title: \"My First Post\" subtitle: \"\" date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true author: \"\" authorLink: \"\" description: \"\" license: \"\" images: [] tags: [] categories: [] featuredImage: \"\" featuredImagePreview: \"\" hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true rssFullText: false toc: enable: true auto: true code: copy: true maxShownLines: 50 math: enable: false # ... mapbox: # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \"some.css\" # located in \"assets/\" # Or # someCSS = \"https://cdn.example.com/some.css\" js: # someJS = \"some.js\" # located in \"assets/\" # Or # someJS = \"https://cdn.example.com/some.js\" seo: images: [] # ... --- title: the title for the content. subtitle: the subtitle for the content. date: the datetime assigned to this page, which is usually fetched from the date field in front matter, but this behaviour is configurabl in the site configuration. lastmod: the datetime at which the content was last modified. draft: if true, the content will not be rendered unless the --buildDrafts/-D flag is passed to the hugo command. author: the author for the content. authorLink: the link of the author. description: the description for the content. license: the special lisence for this content. images: page images for Open Graph and Twitter Cards. tags: the tags for the content. categories: the categories for the content. featuredImage: the featured image for the content. featuredImagePreview: the featured image for the content preview in the home page. hiddenFromHomePage: if true, the content will not be shown in the home page. hiddenFromSearch: if true, the content will not be shown in the search results. twemoji: if true, the content will enable the twemoji. lightgallery: if true, images in the content will be shown as the gallery. ruby: if true, the content will enable the ruby extended syntax. fraction: if true, the content will enable the fraction extended syntax. fontawesome: if true, the content will enable the Font Awesome extended syntax. linkToMarkdown: if true, the footer of the content will be shown the link to the orignal Markdown file. rssFullText: if true, the full text content will be shown in RSS. toc: the same as the params.page.toc part in the site configuration. code: the same as the params.page.code part in the site configuration. math: the same as the params.page.math part in the site configuration. mapbox: the same as the params.page.mapbox part in the site configuration. share: the same as the params.page.share part in the site configuration. comment: the same as the params.page.comment part in the site configuration. library: the same as the params.page.library part in the site configuration. seo: the same as the params.page.seo part in the site configuration. Tip featuredImage and featuredImagePreview support the complete usage of local resource references. If the page resource with name: featured-image or name: featured-image-preview is set in the front matter, it is not necessary to set the parameter featuredImage or featuredImagePreview: resources: - name: featured-image src: featured-image.jpg - name: featured-image-preview src: featured-image-preview.jpg ","date":"2020-03-05","objectID":"/theme-documentation-content/:2:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"3 Content Summaries LoveIt theme uses the summary of the content to display abstract information in the home page. Hugo can generate summaries of your content. Summary Preview ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Automatic Summary Splitting By default, Hugo automatically takes the first 70 words of your content as its summary. You may customize the summary length by setting summaryLength in the site configuration. If you are creating content in a CJKChinese/Japanese/Korean language and want to use Hugo’s automatic summary splitting, set hasCJKLanguage to true in your site configuration. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:1","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Manual Summary Splitting Alternatively, you may add the \u003c!--more--\u003e summary divider where you want to split the article. Content that comes before the summary divider will be used as that content’s summary. Note Be careful to enter \u003c!--more--\u003e exactly; i.e., all lowercase and with no whitespace. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:2","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Front Matter Summary You might want your summary to be something other than the text that starts the article. In this case you can provide a separate summary in the summary variable of the article front matter. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:3","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Use Description as Summary You might want your description in the description variable of the article front matter as the summary. You may add the \u003c!--more--\u003e summary divider at the start of the article. Keep content that comes before the summary divider empty. Then LoveIt theme will use your description as the summary. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:4","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Priority Order of Summary Selection Because there are multiple ways in which a summary can be specified it is useful to understand the order. It is as follows: If there is a \u003c!--more--\u003e summary divider present in the article but no content is before the divider, the description will be used as the summary. If there is a \u003c!--more--\u003e summary divider present in the article the text up to the divider will be provided as per the manual summary split method. If there is a summary variable in the article front matter the value of the variable will be provided as per the front matter summary method. The text at the start of the article will be provided as per the automatic summary split method. Note It is not recommended to include rich text block elements in the summary, which will cause typographic errors. Such as code blocks, pictures, tables, etc. ","date":"2020-03-05","objectID":"/theme-documentation-content/:3:5","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"4 Basic Markdown Syntax This part is shown in the basic markdown syntax page. ","date":"2020-03-05","objectID":"/theme-documentation-content/:4:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"5 Extended Markdown Syntax LoveIt theme has some extended syntax elements for you to write articles. ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:0","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Emoji Support This part is shown in the emoji support page. ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:1","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Mathematical Formula LoveIt theme supports mathematical formulas based on $\\KaTeX$. Set the property enable = true under [params.math] in your site configuration and the property math: true of the article front matter to enable the automatic rendering of mathematical formulas. $\\KaTeX$ automatically renders formulas based on specific delimiters. Tip Here is a list of $\\TeX$ functions supported by $\\KaTeX$. Note Since Hugo generates HTML documents according to the syntax such as _/*/\u003e\u003e when rendering Markdown documents, and some text content in the form of escape characters (such as \\(/\\)/\\[/\\]/\\\\) escape processing will be performed automatically, therefore, additional escape character expressions are required for these places to achieve automatic rendering: _ -\u003e \\_ * -\u003e \\* \u003e\u003e -\u003e \\\u003e\u003e \\( -\u003e \\\\( \\) -\u003e \\\\) \\[ -\u003e \\\\[ \\] -\u003e \\\\] \\\\ -\u003e \\\\\\\\ LoveIt theme supports raw shortcode to avoid these escape characters, which helps you write raw mathematical formula content. Example raw input: Inline Formula: Block Formula: The rendered output looks like this: Inline Formula: Block Formula: Inline Formula The default inline delimiters are: $ ... $ \\( ... \\) (escaped: \\\\( ... \\\\)) For example: $c = \\pm\\sqrt{a^2 + b^2}$ and \\\\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\\\) The rendered output looks like this: $c = \\pm\\sqrt{a^2 + b^2}$ and \\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\) Block Formula The default block delimiters are: $$ ... $$ \\[ ... \\] (escaped: \\\\[ ... \\\\]) \\begin{equation} ... \\end{equation} (unnumbered: \\begin{equation*} ... \\end{equation*}) \\begin{align} ... \\end{align} (unnumbered: \\begin{align*} ... \\end{align*}) \\begin{alignat} ... \\end{alignat} (unnumbered: \\begin{alignat*} ... \\end{alignat*}) \\begin{gather} ... \\end{gather} (unnumbered: \\begin{gather*} ... \\end{gather*}) \\begin{CD} ... \\end{CD} For example: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}\\_{i}=\\mathbf{E}\\_{1}+\\mathbf{E}\\_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\\\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\\\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\\\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\\\u003e\u003e B \\\\\\\\ @VbVV @AAcA \\\\\\\\ C @= D \\end{CD} The rendered output looks like this: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\u003e\u003e B \\\\ @VbVV @AAcA \\\\ C @= D \\end{CD} Tip You can add more inline and block delimiters in your site configuration. Copy-tex Copy-tex is an extension for $\\KaTeX$. By the extension, when selecting and copying $\\KaTeX$ rendered elements, copies their $\\LaTeX$ source to the clipboard. Set the property copyTex = true under [params.math] in your site configuration to enable Copy-tex. Select and copy the formula rendered in the previous section, and you can find that the copied content is the $\\LaTeX$ source code. mhchem mhchem is an extension for $\\KaTeX$. By the extension, you can write beautiful chemical equations easily in the article. Set the property mhchem = true under [params.math] in your site configuration to enable mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ The rendered output looks like this: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:2","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Ruby Annotation An extended Markdown syntax for ruby annotation is supported in LoveIt theme: [Hugo]^(An open-source static site generator) The rendered output looks like this: HugoAn open-source static site generator ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:3","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Fraction An extended Markdown syntax for fraction is supported in LoveIt theme: [Light]/[Dark] [99]/[100] The rendered output looks like this: Light/Dark 90/100 ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:4","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["documentation"],"content":"Font Awesome LoveIt theme uses Font Awesome as the icon library. You can easily use these icons in your articles. Get the class of icons you wanted from the Font Awesome website. Gone camping! :(fas fa-campground fa-fw): Be back soon. That is so funny! :(far fa-grin-tears): The rendered output looks like this: Gone camping!  Be back soon. That is so funny! ","date":"2020-03-05","objectID":"/theme-documentation-content/:5:5","tags":["content","Markdown"],"title":"Theme Documentation - Content","uri":"/theme-documentation-content/"},{"categories":["project"],"content":"Send sms notification by crawler tool with python. ","date":"2023-08-27","objectID":"/sms-python-gogoro/:0:0","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"前言 此專案是我在進入軟體工程前製作的小工具，當時我只有對於program只有基本的邏輯判斷寫法，經驗只有大學用arduino自動化設備，like: 熱感應燈、熱感應風扇。 人們經過時會自動亮燈或是溫度太高開啟風扇的自動化設備。 使專案是我在gogoro實習時已經上手且想實現更多價值，於是試著思考如果`創造實際收益`或是`減少成本耗損`，提高廠內運轉速度以及工位周轉率，開發自動化發送簡訊的輔助工具。 illustative diagram ","date":"2023-08-27","objectID":"/sms-python-gogoro/:1:0","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Project ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:0","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Profit 節省30-40萬/年 Info 已該店實際工程師營收時薪計算，以及工作經驗實際平均評估， 有公定的收費時薪計算方式，以此分析。 ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:1","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Environment python3.11.4 Selenium ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:2","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"How it works 依照輸入客戶電話也可以自動根據隔日預約名單，利用簡易爬蟲讀取第三方call api已達到發送簡訊內容。 內容有基本的模板，也可以由客戶端維修工程師或櫃檯服務人員自定義。 By inputting the customer’s phone number, the system can automatically retrieve the next day’s appointment list. It utilizes a simple web crawler to call third-party API, enabling the sending of SMS notifications. The messages follow a basic template but can also be customized by the client, maintenance engineers, or front desk personnel. ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:3","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":["project"],"content":"Github source code source code link ","date":"2023-08-27","objectID":"/sms-python-gogoro/:2:4","tags":null,"title":"First project - automator tool","uri":"/sms-python-gogoro/"},{"categories":null,"content":"Fun fact about me.","date":"2023-08-26","objectID":"/about/","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":" Abstract Welcome to my personal blog! Here i’ll be sharing insights about my experience as a software engineer. i like to keep things simple and relatable. if you have any questions or any job oppertunities related to engineering. please contact me, let’s have a chat. By Adi. ","date":"2023-08-26","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"about me ","date":"2023-08-26","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Introduction Hi, 我是Adi，我目前從事軟體工程師一年以上的時間，主要負責的工作是後端工程師，現在從事的項目是遊戲server維護以及開發新功能，善於團隊合作針對需求以及不同的產品設計不同的server service，陸陸續續將會更新到posts。 ","date":"2023-08-26","objectID":"/about/:1:1","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Blog 2023-8-27 開始決定經營blog，主要的原因是想要有個自己的網站可以紀錄個人的Change log，也記下自己在當工程師的每個階段里程碑，過一段時間確認自己的方向是否為自己希望的Envisioned Life，另一方面想增進自己統整以及寫blog能力，在吸收到新的知識後，透過寫blog釐清自己的觀念，以及紀錄實用面的觀念，在未來快速找到工具使用。 之前也有開發AI server處理ai事務，舉例：pre-commit-msg case…等，我意識到我的日常類似統整或是翻譯事項已經開始交給AI處理，為了培養統整以及優化自己本身的溝通能力，利用blog的方式持續進步。 ","date":"2023-08-26","objectID":"/about/:1:2","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Work with me 易維護且易擴充服務 產品上線後，為了產品的生命週期，會需要對產品做維護以及開發更多可用功能，在設計之初就要儘量滿足未來的各式考量，具有開發多個產品會需要針對不同接口的服務。 團隊合作 在發開產品的主要雛形透過團隊或是自身開發，在未來後續團隊接手的學習成本也是重要的一環，從溝通討論共識 到後期的文件處理，都可以有效減低新進人員的上手時間。 自動化流程 礙於產品開發時程，構思提高開發效率方法，已開發多個能夠提高團隊開發速度工具，以及自動化測試流程，整合測試工具，建構自動化提升團隊開發效率，不需要讓團隊浪費重複且繁瑣的工作，舉例 AI Server後期也處理改版文件的統整。 ","date":"2023-08-26","objectID":"/about/:1:3","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"oldroad-website ","date":"0001-01-01","objectID":"/projects/oldroad-website/:0:0","tags":null,"title":"","uri":"/projects/oldroad-website/"}]